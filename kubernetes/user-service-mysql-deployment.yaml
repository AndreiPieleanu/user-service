apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\Andrei\go\bin\kompose.exe convert -f docker-compose.yml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: user-service-mysql
  name: user-service-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: user-service-mysql
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\Andrei\go\bin\kompose.exe convert -f docker-compose.yml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: user-service-mysql
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: admin
          image: mysql:8.0
          name: user-service-mysql
          ports:
            - containerPort: 3307
              protocol: TCP
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-init-scripts
              mountPath: /docker-entrypoint-initdb.d
      restartPolicy: Always
      volumes:
        - name: mysql-data
          emptyDir: { } # Use Persistent Volume for production
        - name: mysql-init-scripts
          configMap:
            name: user-service-mysql-init
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-mysql-init
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS user_service;